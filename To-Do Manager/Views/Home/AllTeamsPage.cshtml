@using Entities.ViewModels.HomeViewModels;

@model List<TodayTasksViewModel>

@{
    ViewData["Title"] = "To Do";
}

<div class="row mt-5">

    <!-- Add Task Modal -->
    <div class="modal fade" id="AddTaskModal" tabindex="-1" aria-labelledby="AddTaskModalLabel"
         aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header" style="border: none;">
                    <h1 class="modal-title fs-5" id="AddTaskModalLabel">Create Task</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"
                            aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <input type="hidden" id="TeamId">
                        <div class="col">
                            <div class="mb-3">
                                <label for="TaskName" class="form-label">Task Name</label>
                                <input type="text" class="form-control me-2" id="TaskName" placeholder="Enter Task Name"
                                       autocomplete="off">
                                <span class="text-danger" id="TaskNameSpan"></span>
                            </div>
                            <div class="mb-3">
                                <label for="TaskDescription" class="form-label">Task Description</label>
                                <textarea class="form-control" id="TaskDescription" rows="2" placeholder="Enter Task Description"></textarea>
                                <span class="text-danger" id="TaskDescriptionSpan"></span>
                            </div>
                            <div class="mb-3 assignedTo">
                                <label for="TaskAssignTo" class="form-label">Assign To</label>
                                <select class="form-select form-control" aria-label="Default select example" id="TaskAssignTo">
                                </select>
                                <span class="text-danger" id="TaskAssignToSpan"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer" style="border: none;">
                    <div class="mt-4">
                        <a role="button" class="CancelCreateTeamButton" data-bs-dismiss="modal">Cancel</a>
                    </div>
                    <div class="mt-4">
                        <button type="button" class="addTaskButton" onclick="addTask()">Add Task</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <partial name="/Views/PartialViews/_TaskDescriptionOffCanvas.cshtml" />

    <div class="teamsContainerInToDoPage row">
        @if (Model != null)
        {
            @foreach (var task in Model)
            {
                <div class="col-lg-6 col-12">
                    <div class="teamContainer">
                        <div class="row">
                            <div class="col">
                                <div class="col d-flex justify-content-between align-items-center">
                                    <p class="teamName m-0">@task.TeamName</p>
                                    <div class="d-flex justify-content-start align-items-center">
                                        <button type="button" class="threeDotButton me-2" onclick="getDataForAddTask(@task.TeamId, @task.UserId)">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22"
                                         fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
                                                <path fill-rule="evenodd"
                                              d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z" />
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                                <p class="m-0 mt-2 text-muted">Today's Tasks</p>
                                <div class="allTasksContainer">
                                    @if (task.TodayTasks.Count() != 0)
                                    {
                                        <div class="oneUserTasksContainer mt-3">
                                            <p class="m-0 fs-5">My Tasks</p>
                                            <div class="taskList" style="padding-left: 0px;">
                                                @foreach (var myTasks in task.TodayTasks)
                                                {
                                                    <div class="taskContainer">
                                                        <div class="row">
                                                            <div class="col-1 d-flex align-items-center justify-content-center">
                                                                @if (myTasks.IsCompleted == true)
                                                                {
                                                                    <button class="btn p-0" onclick="markTaskAsCompleteOrUncomplete(@task.UserId, @task.TeamId, @myTasks.TaskId)" id="Task_@myTasks.TaskId">
                                                                        <svg xmlns="http://www.w3.org/2000/svg" width="20"
                                                         height="20" fill="currentColor"
                                                         class="bi bi-check-circle-fill" viewBox="0 0 16 16">
                                                                            <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
                                                                        </svg>
                                                                    </button>
                                                                }
                                                                else
                                                                {
                                                                    <button class="btn p-0" onclick="markTaskAsCompleteOrUncomplete(@task.UserId, @task.TeamId, @myTasks.TaskId)" id="Task_@myTasks.TaskId">
                                                                        <svg xmlns="http://www.w3.org/2000/svg" width="20"
                                                         height="20" fill="currentColor"
                                                         class="bi bi-check-circle" viewBox="0 0 16 16">
                                                                            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
                                                                            <path d="M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z" />
                                                                        </svg>
                                                                    </button>
                                                                }
                                                            </div>
                                                            <div class="col-10 taskNameContainer" onclick="openTaskDetailOffcanvas(event, @myTasks.TaskId)">
                                                                <p class="m-0">@myTasks.TaskName</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }

                                            </div>
                                        </div>
                                    }
                                    @if (task.TeamMembersTaasks.Count() != 0 && task.Role != "TeamMember")
                                    {
                                        @foreach (var userTask in task.TeamMembersTaasks)
                                        {
                                            <div class="oneUserTasksContainer mt-3">
                                                <div class="d-flex justify-content-start align-items-center mb-3">
                                                    <img src="@userTask.Avatar" class="userAvatar " alt="" />
                                                    &nbsp;&nbsp;
                                                    <p class="m-0 fs-5">@userTask.UserName</p>
                                                </div>
                                                <div class="taskList">
                                                    @foreach (var tasksofUser in userTask.TodayTasks)
                                                    {
                                                        <div class="taskContainer">
                                                            <div class="row">
                                                                <div class="col-1 d-flex align-items-center justify-content-center">
                                                                    @if (tasksofUser.IsCompleted == true)
                                                                    {
                                                                        <button class="btn p-0">
                                                                            <svg xmlns="http://www.w3.org/2000/svg" width="20"
                                                         height="20" fill="currentColor"
                                                         class="bi bi-check-circle-fill" viewBox="0 0 16 16">
                                                                                <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
                                                                            </svg>
                                                                        </button>
                                                                    }
                                                                    else
                                                                    {
                                                                        <button class="btn p-0">
                                                                            <svg xmlns="http://www.w3.org/2000/svg" width="20"
                                                         height="20" fill="currentColor"
                                                         class="bi bi-check-circle" viewBox="0 0 16 16">
                                                                                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
                                                                                <path d="M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z" />
                                                                            </svg>
                                                                        </button>
                                                                    }
                                                                </div>
                                                                <div class="col-10 taskNameContainer" onclick="openTaskDetailOffcanvas(event, @tasksofUser.TaskId)">
                                                                    <p class="m-0">@tasksofUser.TaskName</p>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

<script src="~/js/Home.js"></script>
@if (TempData["IsLoginSuccessful"] != null)
{
    <script>
        const Toast = Swal.mixin({
          toast: true,
          position: 'top-start',
          showConfirmButton: false,
          timer: 3000,
          timerProgressBar: true,
          didOpen: (toast) => {
            toast.addEventListener('mouseenter', Swal.stopTimer)
            toast.addEventListener('mouseleave', Swal.resumeTimer)
          }
        })

        Toast.fire({
          icon: 'success',
          title: 'Login in successfully'
        })
    </script>
}